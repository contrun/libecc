name: ci

on:
  push:
    branches:
    - '**'
  workflow_dispatch:
    branches:
    - '**'
  pull_request:
    branches:
    - master
    - main

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - uses: cachix/install-nix-action@v22
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - uses: DeterminateSystems/magic-nix-cache-action@v1
      with:
        diagnostic-endpoint: ""

    - name: run tests
      continue-on-error: true
      run: |
        set -xeuo pipefail
        nix profile install "nixpkgs#pkgsCross.riscv64.stdenv.cc.out" "nixpkgs#pkgsCross.riscv64.pkgsStatic.stdenv.cc.out" "nixpkgs#qemu" "nixpkgs#hexyl"
        VERBOSE=1 CC=riscv64-unknown-linux-musl-gcc CFLAGS="-DVERBOSE_INNER_VALUES -DUSER_NN_BIT_LEN=256 -DWORDSIZE=64 -DWITH_STDLIB -DWITH_BLANK_EXTERNAL_DEPENDENCIES -fPIC -g -O3" make execs
        mkdir tmp
        cd tmp
        qemu-riscv64 ../build/ec_utils gen_keys SECP256R1 ECDSA test
        ls -lha
        for f in test*.bin; do echo "$f"; hexyl "$f"; done
        cat test*.h
        head -c 8 /dev/random > message
        hexyl message
        qemu-riscv64 ../build/ec_utils sign SECP256R1 ECDSA SHA256 message test_private_key.bin signature
        hexyl signature
        qemu-riscv64 ../build/ec_utils verify SECP256R1 ECDSA SHA256 message test_public_key.bin signature
        qemu-riscv64 ../build/ec_self_tests vectors

    - uses: actions/upload-artifact@v3
      with:
        name: riscv64-linux-artifacts
        path: |
          build
          tmp
